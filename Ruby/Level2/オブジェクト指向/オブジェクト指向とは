//メモ
Rubyでは、クラス外部からインスタンス変数に対して直接操作することができません。
→ゲッターとセッターが必要

ポイント
Rubyでは、クラス外部からインスタンス変数に対して直接操作することができないので、ゲッター / セッターメソッドを経由する必要がある
ゲッターメソッドは、インスタンス変数の読み取り用のインスタンスメソッド
セッターメソッド、インスタンス変数の書き込み用のインスタンスメソッド

1. オブジェクト指向の目的
オブジェクト指向が何のためにあるのか、プログラミング初心者にわかるように説明してください。
→コードの再利用性や拡張性をあげる

2. カプセル化
オブジェクト指向におけるカプセル化とはどのような概念か、プログラミング初心者にわかるように説明してください。
→クラスの内部データを保護するためのもの

3. 継承
オブジェクト指向における継承とはどのような概念か、プログラミング初心者にわかるように説明してください。
→コードの機能を受け継ぐ

4. ポリモーフィズム
オブジェクト指向におけるポリモーフィズムとはどのような概念か、プログラミング初心者にわかるように説明してください。
→オブジェクトごとにメソッドの結果になる

5. 単一責任の原則
オブジェクト指向の重要な設計原則である「単一責任の原則」について、プログラミング初心者にわかるように説明してください。
クラスに一つの機能のみを持たせる
